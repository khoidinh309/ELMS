name: CI-CD

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['7.0.x']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Cache NuGet packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.nuget/packages
          **/*.sln
        key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          nuget-${{ runner.os }}-
    

    - name: Setup dotnet ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v4.0.0
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    
    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release

    - name: Test
      run: dotnet test --configuration Release --no-build

    - name: Publish Artifact
      if: success()
      run: dotnet publish -c Release -o ${{ github.workspace }}/publish -f net7.0

    - name: Upload Artifact
      if: success()
      uses: actions/upload-artifact@v2
      with:
        name: published-app
        path: ${{ github.workspace }}/publish

    - name: Upload Test Results
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: '**/*.trx'

  deploy:
    runs-on: self-hosted

    steps:
    - name: Download CI artifacts
      uses: actions/download-artifact@v2
      with:
        name: published-app
        path: ${{ github.workspace }}/published-app

    - name: Deploy
      run: |
        # Gracefully recycle the IIS application pool
        Stop-WebAppPool -Name "leave-day-services"
        Start-Sleep -s 5  # Wait for a few seconds for the application pool to stop
        
        # Copy files to the deployment directory
        robocopy ${{ github.workspace }}/published-app C:\inetpub\wwwroot\leave-day-services /E /MIR /NFL /NDL /NJH /NJS /nc /ns /np

        # Restart the IIS application pool
        Start-WebAppPool -Name "leave-day-services"
